{"version":3,"sources":["movie/movie-list.js","movie/movie-card.js","movie.js","App.js","serviceWorker.js","index.js"],"names":["MovieList","props","rateSearchPlus","rateSearch","refiltred","movieList","filter","el","rating","map","Button","style","width","onClick","setmovieCard","name","MovieCard","className","movieCard","src","pic","alt","value","starCount","starColor","emptyStarColor","editing","year","Movie","useState","keyword","setKeyword","setrateSearch","newMovie","setnewMovie","setmovieList","show","setShow","handleClose","handleChange","e","target","useEffect","document","title","display","type","placeholder","onChange","Dropdown","Toggle","id","Menu","Item","toUpperCase","includes","x","Modal","onHide","Header","closeButton","Title","Body","Footer","variant","alert","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dd56f0dd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default function MovieList(props) {\r\n  let rateSearchPlus = props.rateSearch + 1;\r\n  let filtred = props.movieList.filter((el) => el.rating >= props.rateSearch);\r\n  let refiltred = filtred.filter((el) => el.rating < rateSearchPlus);\r\n  return (\r\n    <div>\r\n      {props.rateSearch\r\n        ? refiltred.map((el) => {\r\n            return (\r\n              <div>\r\n                <Button\r\n                  style={{ width: 280 }}\r\n                  onClick={() => {\r\n                    props.setmovieCard(el);\r\n                  }}\r\n                >\r\n                  {el.name}\r\n                </Button>\r\n              </div>\r\n            );\r\n          })\r\n        : props.movieList.map((el) => {\r\n            return (\r\n              <div>\r\n                <Button\r\n                  style={{ width: 280 }}\r\n                  onClick={() => {\r\n                    props.setmovieCard(el);\r\n                  }}\r\n                >\r\n                  {el.name}\r\n                </Button>\r\n              </div>\r\n            );\r\n          })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport StarRatingComponent from \"react-star-rating-component\";\r\n\r\nexport default function MovieCard(props) {\r\n  return (\r\n    <div className=\"movieCard\">\r\n      <h3>{props.movieCard.name}</h3>\r\n      <img className=\"pic\" src={props.movieCard.pic} alt=\"\"></img>\r\n      <StarRatingComponent\r\n        name={props.movieCard.name}\r\n        value={props.movieCard.rating}\r\n        starCount={\"5\"}\r\n        starColor={\"#ffb400\"}\r\n        emptyStarColor={\"#333\"}\r\n        editing={false}\r\n      />\r\n\r\n      <h4>{props.movieCard.year}</h4>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MovieList from \"./movie/movie-list\";\r\nimport MovieCard from \"./movie/movie-card\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\n\r\nexport default function Movie(props) {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [rateSearch, setrateSearch] = useState(\"\");\r\n  const [newMovie, setnewMovie] = useState({\r\n    name: \"\",\r\n    pic: \"\",\r\n    rating: 0,\r\n    year: 0,\r\n  });\r\n  const [movieCard, setmovieCard] = useState({\r\n    name: \"SONIC LE FILM\",\r\n    pic: \"https://fr.web.img3.acsta.net/pictures/20/02/10/17/16/0746079.jpg\",\r\n    rating: 3.4,\r\n    year: \"2020\",\r\n  });\r\n  const [movieList, setmovieList] = useState([\r\n    {\r\n      name: \"SONIC LE FILM\",\r\n      pic: \"https://fr.web.img3.acsta.net/pictures/20/02/10/17/16/0746079.jpg\",\r\n      rating: 3.4,\r\n      year: 2020,\r\n    },\r\n    {\r\n      name: \"L'APPEL DE LA FORÃŠT\",\r\n      pic:\r\n        \"https://yc.cldmlk.com/tn029qswebz1gahz3xzzhb7x44/1578345436441_Poster.jpg\",\r\n      rating: 4,\r\n      year: 2020,\r\n    },\r\n    {\r\n      name: \"AVENGERS: ENDGAME\",\r\n      pic: \"https://fr.web.img2.acsta.net/pictures/19/04/04/09/04/0472053.jpg\",\r\n      rating: 4,\r\n      year: 2019,\r\n    },\r\n  ]);\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  };\r\n  const handleChange = (e) => {\r\n    setnewMovie({ ...newMovie, [e.target.name]: e.target.value });\r\n  };\r\n  const addMovie = () => {\r\n    newMovie.name\r\n      ? newMovie.pic\r\n        ? newMovie.rating\r\n          ? newMovie.year\r\n            ? setmovieList([...movieList, newMovie])\r\n            : alert(\"please insert a year\")\r\n          : alert(\"please insert a rate\")\r\n        : alert(\"please insert a picture URL\")\r\n      : alert(\"please insert a name\");\r\n    handleClose();\r\n    setnewMovie({ name: \"\", pic: \"\", rating: 0, year: 0 });\r\n    alert(\"movie added\");\r\n  };\r\n  useEffect(() => {\r\n    document.title = `${movieCard.name}`;\r\n  }, [movieCard]);\r\n  return (\r\n    <div className=\"container-fluid row\">\r\n      <div className=\"col-4 movieList\">\r\n        <div style={{ display: \"flex\" }}>\r\n          <div className=\"search\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"search...\"\r\n              onChange={(e) => {\r\n                setKeyword(e.target.value);\r\n              }}\r\n            ></input>\r\n            <Dropdown>\r\n              <Dropdown.Toggle id=\"dropdown-basic-button\">\r\n                search by rating\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item onClick={() => setrateSearch(1)}>\r\n                  <img className=\"star\" src=\"./star.png\" alt=\"\" />\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={() => setrateSearch(2)}>\r\n                  <img className=\"star\" src=\"./star.png\" alt=\"\" />\r\n                  <img className=\"star\" src=\"./star.png\" alt=\"\" />\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={() => setrateSearch(3)}>\r\n                  <img className=\"star\" src=\"./star.png\" alt=\"\" />\r\n                  <img className=\"star\" src=\"./star.png\" alt=\"\" />\r\n                  <img className=\"star\" src=\"./star.png\" alt=\"\" />\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={() => setrateSearch(4)}>\r\n                  <img className=\"star\" src=\"./star.png\" alt=\"\" />\r\n                  <img className=\"star\" src=\"./star.png\" alt=\"\" />\r\n                  <img className=\"star\" src=\"./star.png\" alt=\"\" />\r\n                  <img className=\"star\" src=\"./star.png\" alt=\"\" />\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={() => setrateSearch(5)}>\r\n                  <img className=\"star\" src=\"./star.png\" alt=\"\" />\r\n                  <img className=\"star\" src=\"./star.png\" alt=\"\" />\r\n                  <img className=\"star\" src=\"./star.png\" alt=\"\" />\r\n                  <img className=\"star\" src=\"./star.png\" alt=\"\" />\r\n                  <img className=\"star\" src=\"./star.png\" alt=\"\" />\r\n                </Dropdown.Item>\r\n                <Dropdown.Item onClick={() => setrateSearch(\"\")}>\r\n                  All\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </div>\r\n          <Button onClick={handleShow}>+</Button>\r\n        </div>\r\n        <MovieList\r\n          rateSearch={rateSearch}\r\n          movieList={movieList.filter((el) =>\r\n            el.name.toUpperCase().includes(keyword.toUpperCase())\r\n          )}\r\n          setmovieCard={(x) => setmovieCard(x)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"col-8\">\r\n        <MovieCard movieCard={movieCard} />\r\n      </div>\r\n      <div>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Add Movie</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"container-fluid row\">\r\n              <div className=\"col-4\">Name: </div>\r\n              <div className=\"col-8\">\r\n                <input type=\"text\" onChange={handleChange} name=\"name\"></input>\r\n              </div>\r\n              <div className=\"col-4\">Picture URL: </div>\r\n              <div className=\"col-8\">\r\n                <input type=\"text\" onChange={handleChange} name=\"pic\"></input>\r\n              </div>\r\n              <div className=\"col-4\">Rate: </div>\r\n              <div className=\"col-8\">\r\n                <input\r\n                  type=\"number\"\r\n                  onChange={handleChange}\r\n                  name=\"rating\"\r\n                ></input>\r\n              </div>\r\n              <div className=\"col-4\">Year: </div>\r\n              <div className=\"col-8\">\r\n                <input\r\n                  type=\"number\"\r\n                  onChange={handleChange}\r\n                  name=\"year\"\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={addMovie}>\r\n              Add Movie\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Movie from \"./movie\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Movie />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}