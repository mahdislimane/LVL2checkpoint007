{"version":3,"sources":["movie/movie-list.js","movie/movie-card.js","movie.js","App.js","serviceWorker.js","index.js"],"names":["MovieList","props","filtred","movieList","filter","el","rating","rateSearch","style","display","justifyContent","flexWrap","map","flexDirection","alignItems","margin","cursor","onClick","setmovieCard","setShowsec","name","height","src","pic","value","starCount","starColor","emptyStarColor","editing","MovieCard","Modal","show","onHide","handleClose","Header","closeButton","Body","className","fontSize","movieCard","alt","year","Movie","useState","showsec","keyword","setKeyword","setrateSearch","newMovie","setnewMovie","setmovieList","setShow","handleChange","e","target","newMovieRatinOk","alert","useEffect","document","title","type","placeholder","onChange","onStarClick","nextValue","Button","x","toUpperCase","includes","Title","Footer","variant","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.58c4c1fd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport StarRatingComponent from \"react-star-rating-component\";\r\n\r\nexport default function MovieList(props) {\r\n  let filtred = props.movieList.filter((el) => el.rating >= props.rateSearch);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        flexWrap: \"wrap\",\r\n      }}\r\n    >\r\n      {filtred.map((el) => {\r\n        return (\r\n          <div\r\n            style={{\r\n              flexDirection: \"column\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              margin: \"20px\",\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            <h2\r\n              onClick={() => {\r\n                props.setmovieCard(el);\r\n                props.setShowsec(true);\r\n              }}\r\n            >\r\n              {el.name}\r\n            </h2>\r\n            <img\r\n              style={{ height: \"350px\" }}\r\n              src={el.pic}\r\n              onClick={() => {\r\n                props.setmovieCard(el);\r\n                props.setShowsec(true);\r\n              }}\r\n            ></img>\r\n\r\n            <StarRatingComponent\r\n              name={el.name}\r\n              value={el.rating}\r\n              starCount={\"5\"}\r\n              starColor={\"#ffb400\"}\r\n              emptyStarColor={\"#333\"}\r\n              editing={false}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport StarRatingComponent from \"react-star-rating-component\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nimport \"../App.css\";\r\n\r\nexport default function MovieCard(props) {\r\n  return (\r\n    <Modal show={props.show} onHide={props.handleClose}>\r\n      <Modal.Header closeButton></Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"movieCard\" style={{ fontSize: \"30px\" }}>\r\n          <img className=\"pic\" src={props.movieCard.pic} alt=\"\"></img>\r\n          <StarRatingComponent\r\n            name={props.movieCard.name}\r\n            value={props.movieCard.rating}\r\n            starCount={\"5\"}\r\n            starColor={\"#ffb400\"}\r\n            emptyStarColor={\"#333\"}\r\n            editing={false}\r\n          />\r\n\r\n          <h4>{props.movieCard.year}</h4>\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MovieList from \"./movie/movie-list\";\r\nimport MovieCard from \"./movie/movie-card\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport StarRatingComponent from \"react-star-rating-component\";\r\nimport \"./App.css\";\r\n\r\nexport default function Movie(props) {\r\n  const [showsec, setShowsec] = useState(false);\r\n  const handleClosesec = () => setShowsec(false);\r\n  const handleShowsec = () => {\r\n    setShowsec(true);\r\n  };\r\n  const [keyword, setKeyword] = useState(\"\");\r\n  const [rateSearch, setrateSearch] = useState(1);\r\n  const [newMovie, setnewMovie] = useState({\r\n    name: \"\",\r\n    pic: \"\",\r\n    rating: 0,\r\n    year: 0,\r\n  });\r\n  const [movieCard, setmovieCard] = useState({\r\n    name: \"SONIC LE FILM\",\r\n    pic: \"https://fr.web.img3.acsta.net/pictures/20/02/10/17/16/0746079.jpg\",\r\n    rating: 3.4,\r\n    year: \"2020\",\r\n  });\r\n  const [movieList, setmovieList] = useState([\r\n    {\r\n      name: \"SONIC LE FILM\",\r\n      pic: \"https://fr.web.img3.acsta.net/pictures/20/02/10/17/16/0746079.jpg\",\r\n      rating: 3.4,\r\n      year: 2020,\r\n    },\r\n    {\r\n      name: \"L'APPEL DE LA FORÃŠT\",\r\n      pic:\r\n        \"https://yc.cldmlk.com/tn029qswebz1gahz3xzzhb7x44/1578345436441_Poster.jpg\",\r\n      rating: 4,\r\n      year: 2020,\r\n    },\r\n    {\r\n      name: \"AVENGERS: ENDGAME\",\r\n      pic: \"https://fr.web.img2.acsta.net/pictures/19/04/04/09/04/0472053.jpg\",\r\n      rating: 4,\r\n      year: 2019,\r\n    },\r\n  ]);\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  };\r\n  const handleChange = (e) => {\r\n    setnewMovie({ ...newMovie, [e.target.name]: e.target.value });\r\n  };\r\n  const validateMovie = () => {\r\n    setmovieList([...movieList, newMovie]);\r\n    alert(\"movie added\");\r\n    handleClose();\r\n    setnewMovie({ name: \"\", pic: \"\", rating: 0, year: 0 });\r\n  };\r\n  const newMovieRatinOk = () => {\r\n    newMovie.rating <= 5\r\n      ? validateMovie()\r\n      : alert(\"please insert a rate between 0 and 5\");\r\n  };\r\n  const addMovie = () => {\r\n    newMovie.name\r\n      ? newMovie.pic\r\n        ? newMovie.rating\r\n          ? newMovie.year\r\n            ? newMovieRatinOk()\r\n            : alert(\"please insert a year\")\r\n          : alert(\"please insert a rate\")\r\n        : alert(\"please insert a picture URL\")\r\n      : alert(\"please insert a name\");\r\n  };\r\n  useEffect(() => {\r\n    document.title = `${movieCard.name}`;\r\n  }, [movieCard]);\r\n  const onStarClick = (nextValue) => {\r\n    setrateSearch(nextValue);\r\n  };\r\n  return (\r\n    <div className=\"container-fluid row\">\r\n      <div className=\"col-12 movieList\">\r\n        <div style={{ display: \"flex\" }}>\r\n          <div className=\"search\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"search...\"\r\n              onChange={(e) => {\r\n                setKeyword(e.target.value);\r\n              }}\r\n            ></input>\r\n            <div style={{ fontSize: \"30px\" }}>\r\n              <StarRatingComponent\r\n                name=\"searching with stars\"\r\n                starCount={5}\r\n                value={rateSearch}\r\n                onStarClick={onStarClick}\r\n              />\r\n            </div>\r\n          </div>\r\n          <Button onClick={handleShow}>+</Button>\r\n        </div>\r\n        <MovieList\r\n          setShowsec={(x) => setShowsec(x)}\r\n          rateSearch={rateSearch}\r\n          movieList={movieList.filter((el) =>\r\n            el.name.toUpperCase().includes(keyword.toUpperCase())\r\n          )}\r\n          setmovieCard={(x) => setmovieCard(x)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"col-8\">\r\n        <MovieCard\r\n          movieCard={movieCard}\r\n          show={showsec}\r\n          setShow={setShowsec}\r\n          handleClose={(x) => handleClosesec(x)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Add Movie</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"container-fluid row\">\r\n              <div className=\"col-4\">Name: </div>\r\n              <div className=\"col-8\">\r\n                <input type=\"text\" onChange={handleChange} name=\"name\"></input>\r\n              </div>\r\n              <div className=\"col-4\">Picture URL: </div>\r\n              <div className=\"col-8\">\r\n                <input type=\"text\" onChange={handleChange} name=\"pic\"></input>\r\n              </div>\r\n              <div className=\"col-4\">Rate: </div>\r\n              <div className=\"col-8\">\r\n                <input\r\n                  type=\"number\"\r\n                  onChange={handleChange}\r\n                  name=\"rating\"\r\n                ></input>\r\n              </div>\r\n              <div className=\"col-4\">Year: </div>\r\n              <div className=\"col-8\">\r\n                <input\r\n                  type=\"number\"\r\n                  onChange={handleChange}\r\n                  name=\"year\"\r\n                ></input>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={addMovie}>\r\n              Add Movie\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Movie from \"./movie\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Movie />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}